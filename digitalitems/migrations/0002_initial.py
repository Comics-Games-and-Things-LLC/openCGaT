# Generated by Django 4.2.2 on 2023-06-10 20:00

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('digitalitems', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('billing', '0002_initial'),
        ('partner', '0001_initial'),
        ('checkout', '0001_initial'),
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DigitalItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.item')),
                ('download_date', models.DateField(verbose_name='Date Available for download')),
                ('pay_what_you_want', models.BooleanField(default=False, help_text='This makes price the minimum the user has to pay, and default price the amount the form defaults to')),
                ('enable_download_all', models.BooleanField(default=True, help_text='Show the Download All Button')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('derived_from_all', models.ManyToManyField(blank=True, related_name='derivatives_all', to='digitalitems.digitalitem')),
                ('derived_from_any', models.ManyToManyField(blank=True, related_name='derivatives_any', to='digitalitems.digitalitem')),
                ('files', models.ManyToManyField(blank=True, to='digitalitems.difile')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('shop.item',),
        ),
        migrations.CreateModel(
            name='Downloadable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('file', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='downloadable', to='digitalitems.difile')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='digitalitems.downloadable')),
            ],
        ),
        migrations.CreateModel(
            name='Downloads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('partner_paid', models.BooleanField(default=False)),
                ('timestamp_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('skip_billing', models.BooleanField(default=False)),
                ('added_from_cart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='checkout.cart')),
                ('billing_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.billingevent')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='digitalitems.digitalitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DownloadHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_history', to='digitalitems.difile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.AddField(
            model_name='digitalitem',
            name='root_downloadable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='digitalitems.downloadable'),
        ),
        migrations.AddField(
            model_name='difile',
            name='partner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='partner.partner'),
        ),
        migrations.CreateModel(
            name='UserDownloadableHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('downloadable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_history', to='digitalitems.downloadable')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloadable_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'timestamp',
                'indexes': [models.Index(fields=['user', 'downloadable'], name='digitalitem_user_id_5618a8_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='downloads',
            constraint=models.UniqueConstraint(fields=('user', 'item'), name='one_purchase_record_per_user'),
        ),
        migrations.AddIndex(
            model_name='downloadhistory',
            index=models.Index(fields=['user', 'file'], name='digitalitem_user_id_8775d3_idx'),
        ),
        migrations.AddConstraint(
            model_name='downloadable',
            constraint=models.UniqueConstraint(condition=models.Q(('file', None)), fields=('parent', 'folder'), name='unique_folder'),
        ),
    ]
