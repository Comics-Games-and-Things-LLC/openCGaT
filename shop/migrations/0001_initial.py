# Generated by Django 3.2.16 on 2022-11-22 19:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_react_templatetags.mixins
import djmoney.models.fields
import mptt.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('images', '0002_image_partner'),
        ('partner', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('game_info', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CardCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_shorthand', models.CharField(max_length=10)),
                ('condition_description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_product_line', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_visible', models.BooleanField(default=0)),
                ('default_price_currency', djmoney.models.fields.CurrencyField(choices=[('USD', 'US Dollar')], default='XYZ', editable=False, max_length=3)),
                ('default_price', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=19)),
                ('price_currency', djmoney.models.fields.CurrencyField(choices=[('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('price', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='USD', max_digits=19)),
                ('enable_discounts', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('override_visible', models.BooleanField(default=False, help_text='overrides product settings', verbose_name='Not Visible')),
                ('override_listed', models.BooleanField(default=False, help_text='overrides product settings', verbose_name='Not Listed')),
                ('override_purchasable', models.BooleanField(default=False, help_text='overrides product settings', verbose_name='Not Purchasable')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(django_react_templatetags.mixins.RepresentationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.item')),
                ('use_linked_inventory', models.BooleanField(default=False)),
                ('current_inventory', models.IntegerField(default=0)),
                ('allow_backorders', models.BooleanField(default=True)),
                ('max_per_cart', models.IntegerField(blank=True, default=None, null=True)),
                ('preallocated', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('shop.item',),
        ),
        migrations.CreateModel(
            name='MadeToOrder',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.item')),
                ('needs_quote', models.BooleanField(default=False)),
                ('digital_purchase_necessary', models.BooleanField(default=False)),
                ('current_inventory', models.IntegerField(default=0)),
                ('approx_lead', models.DurationField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('shop.item',),
        ),
        migrations.CreateModel(
            name='UsedItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.item')),
                ('condition_description', models.CharField(max_length=2000)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('shop.item',),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('alt_text', models.CharField(blank=True, help_text='Used in screen readers for the visually impared.  Blank to default to filename', max_length=200, null=True)),
                ('migrated_to', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='migrated_from', to='images.image')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='partner.partner')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_retail', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('in_store_pickup_only', models.BooleanField(default=False)),
                ('product_line_id', models.CharField(blank=True, max_length=200, null=True)),
                ('release_date', models.DateField(blank=True, help_text='YYYY-MM-DD or MM/DD/YYYY, required for a non-draft', null=True, verbose_name='Date released')),
                ('date_inaccurate', models.BooleanField(default=False, verbose_name='This date may be inaccurate')),
                ('purchasable_on_release', models.BooleanField(default=False, help_text='A purchasable item can be purchased, and will also be visible', verbose_name='Purchasable on above date')),
                ('listed_on_release', models.BooleanField(default=False, help_text='A listed item will be listed in the store, and will also be visible', verbose_name='Listed on above date')),
                ('visible_on_release', models.BooleanField(default=False, help_text='The page of a visible item can be viewed and any digital versions downloaded', verbose_name='Visible on above date')),
                ('preorder_or_secondary_release_date', models.DateField(blank=True, help_text='YYYY-MM-DD or MM/DD/YYYY', null=True, verbose_name='Date accepting pre-orders or after-release orders')),
                ('purchasable_on_preorder_secondary', models.BooleanField(default=False, help_text='A purchasable item can be purchased, and will also be visible', verbose_name='Purchasable on above date')),
                ('listed_on_preorder_secondary', models.BooleanField(default=False, help_text='A listed item will be listed in the store, and will also be visible', verbose_name='Listed on above date')),
                ('visible_on_preorder_secondary', models.BooleanField(default=False, help_text='The page of a visible item can be viewed and any digital versions downloaded', verbose_name='Visible on above date')),
                ('page_is_draft', models.BooleanField(default=True, verbose_name='Draft (unpublished)')),
                ('page_is_template', models.BooleanField(default=False, help_text='An unpublished page that can be easily copied')),
                ('description', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('msrp_currency', djmoney.models.fields.CurrencyField(choices=[('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('msrp', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, default_currency='USD', max_digits=8, null=True)),
                ('map_currency', djmoney.models.fields.CurrencyField(choices=[('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('map', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, default_currency='USD', max_digits=8, null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('attached_images', models.ManyToManyField(blank=True, related_name='products', to='images.Image')),
                ('attributes', models.ManyToManyField(blank=True, to='game_info.Attribute')),
                ('categories', models.ManyToManyField(blank=True, to='shop.Category')),
                ('contents', models.ManyToManyField(blank=True, to='game_info.GamePiece')),
                ('editions', models.ManyToManyField(blank=True, to='game_info.Edition')),
                ('factions', models.ManyToManyField(blank=True, to='game_info.Faction')),
                ('formats', models.ManyToManyField(blank=True, to='game_info.Format')),
                ('games', models.ManyToManyField(blank=True, to='game_info.Game')),
                ('image_gallery', models.ManyToManyField(blank=True, related_name='partner_images', to='shop.ProductImage')),
                ('main_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.productimage')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partner.partner')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_shop.product_set+', to='contenttypes.contenttype')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.publisher')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='image_gallery',
            field=models.ManyToManyField(blank=True, related_name='item_images', to='shop.ProductImage'),
        ),
        migrations.AddField(
            model_name='item',
            name='main_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.productimage'),
        ),
        migrations.AddField(
            model_name='item',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='partner.partner'),
        ),
        migrations.AddField(
            model_name='item',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_shop.item_set+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='item',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product'),
        ),
        migrations.CreateModel(
            name='ContainsProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('exact', models.BooleanField(default=True)),
                ('same_except_box', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('of', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contained_in_product', to='shop.product')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contains', to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='BackorderRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.item')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True)),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('quantity', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log', to='shop.inventoryitem')),
            ],
        ),
        migrations.CreateModel(
            name='CustomChargeItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.item')),
                ('description', models.TextField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('shop.item',),
        ),
    ]
